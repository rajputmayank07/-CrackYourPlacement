class Solution {
public:
/*method 1
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int>ans;
        int flag=0;
        for(int i=0;i<nums.size();i++){
            for(int j=1;j<nums.size();j++){
                if(target==nums[i]+nums[j] and i!=j){
                    ans.push_back(i);
                    ans.push_back(j);
                    flag =1;
                    break;
                }
            }
            if(flag) break;
        }
        return ans;
    }
    */
    //method 2:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int,int>map;
        for(int i =0;i<nums.size();i++){
            int complement=target-nums[i];
            if(map.find(complement)!=map.end()){
                return {map[complement],i};
            }
            map[nums[i]]=i;
        }
        return {};
    }
};
